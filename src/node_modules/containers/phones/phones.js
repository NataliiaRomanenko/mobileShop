import React, {Component} from 'react';
import {connect} from 'react-redux'
import {fetchPhones, loadMorePhones} from 'actions'
import {getPhones} from 'selectors'
import {Link} from "react-router-dom";
import Layout from 'containers/layout'

class Phones extends Component {
    componentDidMount() {
        this.props.fetchPhones()
    }
    renderPhone (phone, index){
        const shortDescription = `${phone.description.slice(0, 60)}...`;
        return(
            <div className='col-4 book-list' key={index}>
                <div className='thumbnail'>
                    <img className='img-thumbnail' src={phone.image} alt={phone.name}/>
                    <div className='caption'>
                        <h4 className='pull-right'>$ {phone.price}</h4>
                        <h4><Link to={`/phones/${phone.id}`}>{phone.name}</Link></h4>
                        <p>{shortDescription}</p>
                        <div className="itemButton">
                            <button className="btn btn-primary">Buy now</button>
                            <h4><Link to={`/phones/${phone.id}`} className="btn btn-default">More info</Link></h4>
                        </div>
                    </div>
                </div>
            </div>
        )
    }
    render() {
        console.log(this.props.phones);
        const {phones, loadMorePhones} = this.props;
        return (
            <Layout>
                <div className='books row'>
                    {phones.map((phone, index) => this.renderPhone(phone,index))}
                </div>
                <div className='row'>
                    <div className="col-12">
                        <button className='btn btn-primary pull-right' onClick={loadMorePhones}>Load More</button>
                    </div>
                </div>
            </Layout>
        )
    }

}
const mapStateToProps = state => ({
    phones: getPhones(state)
});
const mapDispatchToProps = {
    fetchPhones,
    loadMorePhones
};
export default connect(mapStateToProps, mapDispatchToProps)(Phones);
